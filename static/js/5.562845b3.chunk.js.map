{"version":3,"sources":["views/artist-page/components/ArtistInfo.js","views/artist-page/components/ListItem.js","views/artist-page/components/ItemList.js","views/artist-page/AritstPage.js"],"names":["numeral","require","ArtistInfo","artistInfo","className","this","props","artist","name","stats","listeners","format","playcount","bio","summary","exact","to","Component","connect","state","ListItem","searchTopTracks","searchTopAlbums","console","log","topAlbums","topalbums","album","songItem","topTracks","toptracks","track","slice","map","Table","Row","key","Cell","href","url","target","rel","albumItem","queryType","listItem","ItemList","albumHeader","HeaderCell","songHeader","celled","Header","type","Body","ArtistPage","handleChange","e","value","setState","bind","match","params","searchArtistInfo","Form","Field","Radio","label","checked","onChange"],"mappings":"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","file":"static/js/5.562845b3.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { PropTypes } from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nconst numeral = require('numeral')\n\nclass ArtistInfo extends Component {\n  \n  \n  \n  \n  render() {\n\n    const artistInfo = (\n      <div className='artist-info-card'>\n        <div className=\"artist-info-card-header\">\n          <h1>{this.props.artist.artist.name}</h1>\n        </div>\n        <div className=\"artist-info-card-subtitle\">\n          <p className='subtitle-item'>Total Listeners:  {numeral(this.props.artist.artist.stats.listeners).format('0,0')} Play Count: {numeral(this.props.artist.artist.stats.playcount).format('0,0')}</p>\n        </div>\n        <div className=\"artist-info-card-bio\">\n        <h3 className='bio-title'>About:</h3>\n          <p className='bio'>{this.props.artist.artist.bio.summary}</p>\n        </div>\n        <br/>\n        <div className=\"return-home-container\">\n          <Link exact to={`/museable`}>Search for another artist</Link>\n        </div>\n      </div>\n    )\n\n    return (\n      <div>\n       {artistInfo}\n      </div>\n    )\n  }\n}\n\n\nArtistInfo.propTypes = {\n  artist: PropTypes.object\n\n}\n\nconst MapStateToProps = state => ({\n  artist: state.artist\n\n\n})\n\nexport default connect(MapStateToProps)(ArtistInfo)\n","import React, { Component } from 'react'\nimport { PropTypes } from 'prop-types'\nimport { connect } from 'react-redux'\nimport { searchTopTracks, searchTopAlbums } from '../../../stores/artistInfo/ArtistInfoActions'\nimport { Table } from 'semantic-ui-react'\nconst numeral = require('numeral')\n\n class ListItem extends Component {\n  componentDidMount() {\n    this.props.searchTopTracks(this.props.artist)\n    this.props.searchTopAlbums(this.props.artist)\n\n    console.log(this.props.topAlbums.topalbums.album[0].name)\n\n  }\n\n\n  listItem() {\n   const songItem = this.props.topTracks.toptracks.track.slice(0,20).map(track => (\n      <Table.Row key={track.name}>\n        <Table.Cell><a href={track.url} target='_blank' rel='noopener noreferrer'>{track.name}</a></Table.Cell>\n        <Table.Cell className='inline-text'>{numeral(track.playcount).format('0,0')}</Table.Cell>\n        <Table.Cell className='inline-text'>{numeral(track.listeners).format('0,0')}</Table.Cell>\n   \n      </Table.Row>\n    ))\n\n    const albumItem = this.props.topAlbums.topalbums.album.slice(0,10).map(album => (\n      <Table.Row key={album.name}>\n        <Table.Cell className='inline-text'><a href={album.url} target='_blank' rel='noopener noreferrer'>{album.name}</a></Table.Cell>\n        <Table.Cell className='inline-text'>{numeral(album.playcount).format('0,0')}</Table.Cell>\n      </Table.Row>\n    ))\n\n\n    switch(this.props.queryType) {\n      case 'TopAlbums':\n        return albumItem\n      case 'TopTracks':\n        return songItem\n      default:\n        return songItem\n    }\n\n  }\n\n\n  render() {\n    return (\n      <>\n        {this.listItem()}\n        \n      </>\n    )\n  }\n}\n\n\nListItem.propTypes = {\n  topTracks: PropTypes.object,\n  topAlbums: PropTypes.object,\n  searchTopTracks: PropTypes.func.isRequired,\n  searchTopAlbums: PropTypes.func.isRequired,\n}\n\nconst MapStateToProps = state => ({\n  topTracks: state.artist.topTracks,\n  topAlbums: state.artist.topAlbums,\n\n\n})\n\nexport default connect(MapStateToProps, { searchTopTracks, searchTopAlbums})(ListItem)\n","import React from 'react'\nimport ListItem from './ListItem'\nimport { Table } from 'semantic-ui-react'\n\n function ItemList(props) {\n\n\n    const albumHeader = (\n     <>   \n        <Table.HeaderCell>Album Title</Table.HeaderCell>\n        <Table.HeaderCell>Play Count</Table.HeaderCell>\n        <Table.HeaderCell>+ Spotify</Table.HeaderCell>\n        <Table.HeaderCell>+ Apple Music</Table.HeaderCell>\n     </>   \n    )\n    const songHeader = (\n     <>   \n        <Table.HeaderCell>Song Title</Table.HeaderCell>\n        <Table.HeaderCell>Play Count</Table.HeaderCell>\n        <Table.HeaderCell>Listeners</Table.HeaderCell>\n        <Table.HeaderCell>+ Spotify</Table.HeaderCell>\n        <Table.HeaderCell>+ Apple Music</Table.HeaderCell>\n     </>   \n    )\n\n\n  return (\n      <div className='list'>\n        <Table celled>\n            <Table.Header>\n            <Table.Row>\n            {props.type === 'TopTracks' ? songHeader : albumHeader}\n            </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                <ListItem queryType={props.type} artist={props.artist}/>\n            </Table.Body>\n        </Table>\n        \n      </div>\n\n  )\n}\n\nexport default ItemList \n","import React, { Component } from 'react'\nimport { PropTypes } from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Form, Radio } from 'semantic-ui-react'\nimport { searchArtistInfo } from '../../stores/artistInfo/ArtistInfoActions'\nimport ArtistInfo from './components/ArtistInfo'\nimport ItemList from './components/ItemList'\n\nclass ArtistPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: 'TopTracks'\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n\n  componentDidMount() {\n    const artist = this.props.match.params.artist\n    \n    this.props.searchArtistInfo(artist)\n  }\n\n \n    handleChange = (e, { value }) => {\n      this.setState({ value })\n    }\n      \n  \n\n  render() {\n\n\n    return (\n      <div className=\"App\">\n        <ArtistInfo/>\n        <div className=\"item-list\">\n        <div className='list-select'>\n            <Form>\n              <Form.Field>\n                <Radio\n                  label='Top Tracks'\n                  name='radioGroup'\n                  value='TopTracks'\n                  checked={this.state.value === 'TopTracks'}\n                  onChange={this.handleChange}\n                />\n                <Radio\n                  label='Top Albums'\n                  name='radioGroup'\n                  value='TopAlbums'\n                  checked={this.state.value === 'TopAlbums'}\n                  onChange={this.handleChange}\n                />\n              </Form.Field> \n            </Form>\n            <div className=\"top-items-container\">\n              <ItemList type={this.state.value} artist={this.props.match.params.artist}/>\n            </div>\n        </div>\n\n      </div>\n      </div>\n    )\n  }\n}\n\n\nArtistPage.propTypes = {\n  searchArtistInfo: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { searchArtistInfo })(ArtistPage)\n"],"sourceRoot":""}