{"version":3,"sources":["views/artist-page/components/ArtistInfo.js","views/artist-page/components/ListItem.js","views/artist-page/components/ItemList.js","views/artist-page/AritstPage.js"],"names":["ArtistInfo","artistInfo","className","this","props","artist","name","stats","listeners","playcount","bio","summary","Component","connect","state","ListItem","searchTopTracks","searchTopAlbums","console","log","topAlbums","topalbums","album","songItem","topTracks","toptracks","track","slice","map","key","href","url","target","rel","albumItem","queryType","listItem","ItemList","type","ArtistPage","handleChange","e","value","setState","bind","match","params","searchArtistInfo","Form","Field","Radio","label","checked","onChange"],"mappings":"kOAIMA,E,uKAOF,IAAMC,EACJ,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,2BACb,4BAAKC,KAAKC,MAAMC,OAAOA,OAAOC,OAEhC,yBAAKJ,UAAU,6BACb,uBAAGA,UAAU,iBAAb,qBAAgDC,KAAKC,MAAMC,OAAOA,OAAOE,MAAMC,UAA/E,gBAAuGL,KAAKC,MAAMC,OAAOA,OAAOE,MAAME,YAExI,yBAAKP,UAAU,wBACf,wBAAIA,UAAU,aAAd,UACE,uBAAGA,UAAU,OAAOC,KAAKC,MAAMC,OAAOA,OAAOK,IAAIC,WAKvD,OACE,6BACEV,O,GAxBiBW,aA0CVC,eANS,SAAAC,GAAK,MAAK,CAChCT,OAAQS,EAAMT,UAKDQ,CAAyBb,GCzCjCe,E,kLAEHZ,KAAKC,MAAMY,gBAAgBb,KAAKC,MAAMC,QACtCF,KAAKC,MAAMa,gBAAgBd,KAAKC,MAAMC,QAEtCa,QAAQC,IAAIhB,KAAKC,MAAMgB,UAAUC,UAAUC,MAAM,GAAGhB,Q,iCAMrD,IAAMiB,EAAWpB,KAAKC,MAAMoB,UAAUC,UAAUC,MAAMC,MAAM,EAAE,IAAIC,KAAI,SAAAF,GAAK,OACxE,wBAAIG,IAAKH,EAAMpB,MACb,yBAAKJ,UAAU,UACf,wBAAIA,UAAU,eAAewB,EAAMpB,MACnC,uBAAGJ,UAAU,eAAewB,EAAMjB,WAClC,uBAAGP,UAAU,eAAewB,EAAMlB,WAClC,uBAAGsB,KAAMJ,EAAMK,IAAKC,OAAO,SAASC,IAAI,uBAAxC,4BAKEC,EAAY/B,KAAKC,MAAMgB,UAAUC,UAAUC,MAAMK,MAAM,EAAE,IAAIC,KAAI,SAAAN,GAAK,OAC1E,wBAAIO,IAAKP,EAAMhB,MACb,yBAAKJ,UAAU,UACf,wBAAIA,UAAU,eAAeoB,EAAMhB,MACnC,uBAAGJ,UAAU,eAAeoB,EAAMb,WAClC,uBAAGqB,KAAMR,EAAMS,IAAKC,OAAO,SAASC,IAAI,uBAAxC,6BAMJ,OAAO9B,KAAKC,MAAM+B,WAChB,IAAK,YACH,OAAOD,EACT,IAAK,YAEL,QACE,OAAOX,K,+BAOX,OACE,oCACGpB,KAAKiC,gB,GAhDUxB,aAsETC,eAPS,SAAAC,GAAK,MAAK,CAChCU,UAAWV,EAAMT,OAAOmB,UACxBJ,UAAWN,EAAMT,OAAOe,aAKc,CAAEJ,oBAAiBC,qBAA5CJ,CAA8DE,GC5D9DsB,MAZd,SAAkBjC,GAIjB,OACI,wBAAIF,UAAU,QACV,kBAAC,EAAD,CAAUiC,UAAW/B,EAAMkC,KAAMjC,OAAQD,EAAMC,WCDnDkC,E,kDACJ,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IAeNoC,aAAe,SAACC,EAAD,GAAmB,IAAbC,EAAY,EAAZA,MACnB,EAAKC,SAAS,CAAED,WAflB,EAAK5B,MAAQ,CACX4B,MAAO,aAET,EAAKF,aAAe,EAAKA,aAAaI,KAAlB,gBALH,E,gEAUjB,IAAMvC,EAASF,KAAKC,MAAMyC,MAAMC,OAAOzC,OAEvCF,KAAKC,MAAM2C,iBAAiB1C,K,+BAa5B,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACf,yBAAKA,UAAU,eACX,kBAAC8C,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,MAAM,aACN7C,KAAK,aACLoC,MAAM,YACNU,QAA8B,cAArBjD,KAAKW,MAAM4B,MACpBW,SAAUlD,KAAKqC,eAEjB,kBAACU,EAAA,EAAD,CACEC,MAAM,aACN7C,KAAK,aACLoC,MAAM,YACNU,QAA8B,cAArBjD,KAAKW,MAAM4B,MACpBW,SAAUlD,KAAKqC,iBAIrB,yBAAKtC,UAAU,uBACb,kBAAC,EAAD,CAAUoC,KAAMnC,KAAKW,MAAM4B,MAAOrC,OAAQF,KAAKC,MAAMyC,MAAMC,OAAOzC,iB,GAlDvDO,aAiEVC,sBAAQ,KAAM,CAAEkC,sBAAhBlC,CAAoC0B","file":"static/js/5.435a47fa.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { PropTypes } from 'prop-types'\nimport { connect } from 'react-redux'\n\nclass ArtistInfo extends Component {\n  \n  \n  \n  \n  render() {\n\n    const artistInfo = (\n      <div className='artist-info-card'>\n        <div className=\"artist-info-card-header\">\n          <h1>{this.props.artist.artist.name}</h1>\n        </div>\n        <div className=\"artist-info-card-subtitle\">\n          <p className='subtitle-item'>Total Listeners:  {this.props.artist.artist.stats.listeners} Play Count: {this.props.artist.artist.stats.playcount}</p>\n        </div>\n        <div className=\"artist-info-card-bio\">\n        <h3 className='bio-title'>About:</h3>\n          <p className='bio'>{this.props.artist.artist.bio.summary}</p>\n        </div>\n      </div>\n    )\n\n    return (\n      <div>\n       {artistInfo}\n      </div>\n    )\n  }\n}\n\n\nArtistInfo.propTypes = {\n  artist: PropTypes.object\n\n}\n\nconst MapStateToProps = state => ({\n  artist: state.artist\n\n\n})\n\nexport default connect(MapStateToProps)(ArtistInfo)\n","import React, { Component } from 'react'\nimport { PropTypes } from 'prop-types'\nimport { connect } from 'react-redux'\nimport { searchTopTracks, searchTopAlbums } from '../../../stores/artistInfo/ArtistInfoActions'\n\n class ListItem extends Component {\n  componentDidMount() {\n    this.props.searchTopTracks(this.props.artist)\n    this.props.searchTopAlbums(this.props.artist)\n\n    console.log(this.props.topAlbums.topalbums.album[0].name)\n\n  }\n\n\n  listItem() {\n   const songItem = this.props.topTracks.toptracks.track.slice(0,20).map(track => (\n      <li key={track.name}>\n        <div className=\"inline\">\n        <h5 className='inline-text'>{track.name}</h5>\n        <p className='inline-text'>{track.playcount}</p>\n        <p className='inline-text'>{track.listeners}</p>\n        <a href={track.url} target='_blank' rel='noopener noreferrer'>Check out The Song!</a>\n        </div>\n      </li>\n    ))\n\n    const albumItem = this.props.topAlbums.topalbums.album.slice(0,10).map(album => (\n      <li key={album.name}>\n        <div className=\"inline\">\n        <h5 className='inline-text'>{album.name}</h5>\n        <p className='inline-text'>{album.playcount}</p>\n        <a href={album.url} target='_blank' rel='noopener noreferrer'>Check Out The Album!</a>\n        </div>\n      </li>\n    ))\n\n\n    switch(this.props.queryType) {\n      case 'TopAlbums':\n        return albumItem\n      case 'TopTracks':\n        return songItem\n      default:\n        return songItem\n    }\n\n  }\n\n\n  render() {\n    return (\n      <>\n        {this.listItem()}\n        \n      </>\n    )\n  }\n}\n\n\nListItem.propTypes = {\n  topTracks: PropTypes.object,\n  topAlbums: PropTypes.object,\n  searchTopTracks: PropTypes.func.isRequired,\n  searchTopAlbums: PropTypes.func.isRequired,\n}\n\nconst MapStateToProps = state => ({\n  topTracks: state.artist.topTracks,\n  topAlbums: state.artist.topAlbums,\n\n\n})\n\nexport default connect(MapStateToProps, { searchTopTracks, searchTopAlbums})(ListItem)\n","import React from 'react'\nimport ListItem from './ListItem'\n\n function ItemList(props) {\n\n\n\n  return (\n      <ul className='list'>\n          <ListItem queryType={props.type} artist={props.artist}/>\n      </ul>\n\n  )\n}\n\nexport default ItemList \n","import React, { Component } from 'react'\nimport { PropTypes } from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Form, Radio } from 'semantic-ui-react'\nimport { searchArtistInfo } from '../../stores/artistInfo/ArtistInfoActions'\nimport ArtistInfo from './components/ArtistInfo'\nimport ItemList from './components/ItemList'\n\nclass ArtistPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: 'TopTracks'\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n\n  componentDidMount() {\n    const artist = this.props.match.params.artist\n    \n    this.props.searchArtistInfo(artist)\n  }\n\n \n    handleChange = (e, { value }) => {\n      this.setState({ value })\n    }\n      \n  \n\n  render() {\n\n\n    return (\n      <div className=\"App\">\n        <ArtistInfo/>\n        <div className=\"item-list\">\n        <div className='list-select'>\n            <Form>\n              <Form.Field>\n                <Radio\n                  label='Top Tracks'\n                  name='radioGroup'\n                  value='TopTracks'\n                  checked={this.state.value === 'TopTracks'}\n                  onChange={this.handleChange}\n                />\n                <Radio\n                  label='Top Albums'\n                  name='radioGroup'\n                  value='TopAlbums'\n                  checked={this.state.value === 'TopAlbums'}\n                  onChange={this.handleChange}\n                />\n              </Form.Field> \n            </Form>\n            <div className=\"top-items-container\">\n              <ItemList type={this.state.value} artist={this.props.match.params.artist}/>\n            </div>\n        </div>\n\n      </div>\n      </div>\n    )\n  }\n}\n\n\nArtistPage.propTypes = {\n  searchArtistInfo: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { searchArtistInfo })(ArtistPage)\n"],"sourceRoot":""}